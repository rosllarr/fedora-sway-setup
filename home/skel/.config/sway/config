# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Alternative row direction keys
set $left_alt a
set $down_alt s
set $up_alt w
set $right_alt d

# Scripts folder
set $script /home/tie/scripts

# terminal
set $term alacritty

# bemenu
set $menu bemenu-run | xargs swaymsg exec

# waybar
#bar { 
#    swaybar_command waybar
#}

# required for flameshot
# https://github.com/flameshot-org/flameshot/blob/master/docs/Sway%20and%20wlroots%20support.md
#exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
#exec hash dbus-update-activation-environment 2>/dev/null && \
#     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

# flameshot - select and capture a custom rectangular area
#bindsym Print exec flameshot gui

# Current window capture
# https://wiki.archlinux.org/title/Screen_capture#Wayland
# https://www.reddit.com/r/swaywm/comments/bw9m52/how_to_take_a_screenshot_of_currently_active/
bindsym $mod+Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') ~/Pictures/screenshots/$(date +'screenshot_%Y%m%d_%H%M%S.png') 

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
output * bg /usr/share/backgrounds/default.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
  input "type:touchpad" {
      tap enabled
      middle_emulation enabled
  }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
    input "type:keyboard" {
        xkb_layout us,th
        xkb_variant ,tis
        xkb_options grp:alt_shift_toggle,caps:escape
        xkb_numlock enable
    }

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+t kill

    # Start your launcher
    bindsym $mod+grave exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+x exec sway exit

    # Lock screen
    bindsym $mod+question exec swaylock --color 000000


    # Use brightnessctl to adjust screen brightness.
    #bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 10%-
    #bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +10%

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+$left_alt focus left
    bindsym $mod+$down_alt focus down
    bindsym $mod+$up_alt focus up
    bindsym $mod+$right_alt focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+$left_alt move left
    bindsym $mod+Shift+$down_alt move down
    bindsym $mod+Shift+$up_alt move up
    bindsym $mod+Shift+$right_alt move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+minus workspace number 11
    bindsym $mod+equal workspace number 12
    # bindsym $mod+F1 workspace number 11
    # bindsym $mod+F2 workspace number 12
    # bindsym $mod+F3 workspace number 13
    # bindsym $mod+F4 workspace number 14
    # bindsym $mod+F5 workspace number 15
    # bindsym $mod+F6 workspace number 16
    # bindsym $mod+F7 workspace number 17
    # bindsym $mod+F8 workspace number 18
    # bindsym $mod+F9 workspace number 19
    # bindsym $mod+F10 workspace number 110
    # bindsym $mod+F11 workspace number 111
    # bindsym $mod+F12 workspace number 112
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Shift+minus move container to workspace number 11
    bindsym $mod+Shift+equal move container to workspace number 12
    # bindsym $mod+Shift+F1 move container to workspace number 11
    # bindsym $mod+Shift+F2 move container to workspace number 12
    # bindsym $mod+Shift+F3 move container to workspace number 13
    # bindsym $mod+Shift+F4 move container to workspace number 14
    # bindsym $mod+Shift+F5 move container to workspace number 15
    # bindsym $mod+Shift+F6 move container to workspace number 16
    # bindsym $mod+Shift+F7 move container to workspace number 17
    # bindsym $mod+Shift+F8 move container to workspace number 18
    # bindsym $mod+Shift+F9 move container to workspace number 19
    # bindsym $mod+Shift+F10 move container to workspace number 110
    # bindsym $mod+Shift+F11 move container to workspace number 111
    # bindsym $mod+Shift+F12 move container to workspace number 112
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    workspace 1 output HDMI-A-1
    workspace 2 output HDMI-A-1
    workspace 3 output HDMI-A-1
    workspace 4 output HDMI-A-1
    workspace 5 output HDMI-A-1
    workspace 6 output HDMI-A-1
    workspace 7 output HDMI-A-1
    workspace 8 output HDMI-A-1
    workspace 9 output HDMI-A-1
    workspace 10 output eDP-1
    workspace 11 output eDP-1
    workspace 12 output eDP-1
    # workspace 11 output HDMI-A-1
    # workspace 12 output HDMI-A-1
    # workspace 13 output HDMI-A-1
    # workspace 14 output HDMI-A-1
    # workspace 15 output HDMI-A-1
    # workspace 16 output HDMI-A-1
    # workspace 17 output HDMI-A-1
    # workspace 18 output HDMI-A-1
    # workspace 19 output HDMI-A-1
    # workspace 110 output HDMI-A-1
    # workspace 111 output HDMI-A-1
    # workspace 112 output HDMI-A-1
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+v splith
    bindsym $mod+b splitv

    # Switch the current container between different layout styles
    bindsym $mod+c layout stacking
    bindsym $mod+e layout tabbed
    bindsym $mod+f layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+z fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+q focus parent

    # Move focus to the parent container
    bindsym $mod+Escape focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    #bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    #bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $mod+Shift+v resize shrink width 20px
    bindsym $mod+v resize grow width 20px
    bindsym $mod+Shift+b resize shrink height 20px
    bindsym $mod+b resize grow height 20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym $mod+Escape mode "default"
    bindsym $mod+Shift+Escape mode "default"
}
bindsym $mod+Shift+r mode "resize"

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
